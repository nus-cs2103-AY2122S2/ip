package duke;

import java.io.EOFException;

import duke.command.Command;
import duke.exception.DukeException;
import duke.manager.Parser;
import duke.manager.Storage;
import duke.manager.TaskList;

/**
 * Represents Duke the assistant.
 */
public class Duke {
    private TaskList taskList;
    private Storage storage;
    private Parser parser;

    /**
     * Constructor for storing the filepath of this instance of Duke.
     *
     * @param filePath The relative filepath of the save file.
     */
    public Duke(String filePath) {
        this.storage = new Storage(filePath);
        this.parser = new Parser();
        this.taskList = new TaskList();
    }

    /**
     * Loads the save file for the TaskList.
     *
     * @throws DukeException If there is an issue loading the save.
     */
    public void load() throws DukeException {
        try {
            this.taskList = new TaskList(storage.load());
        } catch (EOFException e) {
            this.taskList = new TaskList();
        } catch (Exception e) {
            this.taskList = new TaskList();
            throw new DukeException("Problem loading save file, creating a new save.");
        }
    }

    /**
     * Returns the response generated by Duke.
     *
     * @param userInput The input taken from the User.
     * @return The string representation of Duke's response.
     */
    public String getResponse(String userInput) {
        try {
            Command c = parser.parse(userInput);
            return c.execute(taskList, storage);
        } catch (DukeException e) {
            return e.getMessage();
        }
    }

}
